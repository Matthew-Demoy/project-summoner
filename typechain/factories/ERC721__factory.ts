/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b06806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636352211e116100665780636352211e1461011c57806370a082311461014c578063a22cb4651461017c578063b88d4fde14610198578063e985e9c5146101b457610093565b8063081812fc14610098578063095ea7b3146100c857806323b872dd146100e457806342842e0e14610100575b600080fd5b6100b260048036038101906100ad91906110ad565b6101e4565b6040516100bf91906112c1565b60405180910390f35b6100e260048036038101906100dd9190611040565b610269565b005b6100fe60048036038101906100f99190610f2a565b610373565b005b61011a60048036038101906101159190610f2a565b6103cc565b005b610136600480360381019061013191906110ad565b6103ec565b60405161014391906112c1565b60405180910390f35b61016660048036038101906101619190610ebd565b61049d565b60405161017391906114a3565b60405180910390f35b61019660048036038101906101919190611000565b610555565b005b6101b260048036038101906101ad9190610f7d565b6106c1565b005b6101ce60048036038101906101c99190610eea565b61071c565b6040516101db9190611328565b60405180910390f35b60006101ef826107b0565b61022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590611423565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610274826103ec565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dc90611463565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103255750610324813361071c565b5b610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b906113c3565b60405180910390fd5b61036e838361081b565b505050565b61037d33826108d4565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390611483565b60405180910390fd5b6103c78383836109b2565b505050565b6103e7838383604051806020016040528060008152506106c1565b505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611403565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561050e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610505906113e3565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90611383565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106b59190611328565b60405180910390a35050565b6106cb33836108d4565b61070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190611483565b60405180910390fd5b61071684848484610c0b565b50505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661088e836103ec565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108df826107b0565b61091e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610915906113a3565b60405180910390fd5b6000610929836103ec565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061099857508373ffffffffffffffffffffffffffffffffffffffff16610980846101e4565b73ffffffffffffffffffffffffffffffffffffffff16145b806109a957506109a8818561071c565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166109d2826103ec565b73ffffffffffffffffffffffffffffffffffffffff1614610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90611443565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90611363565b60405180910390fd5b610aa3838383610c67565b610aae60008261081b565b60018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610afd9190611597565b9250508190555060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b539190611541565b925050819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610c168484846109b2565b610c2284848484610c6c565b610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611343565b60405180910390fd5b50505050565b505050565b6000610c7784610de6565b15610dd9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b8152600401610cbb94939291906112dc565b602060405180830381600087803b158015610cd557600080fd5b505af1925050508015610d0657506040513d601f19601f82011682018060405250810190610d039190611080565b60015b610d89573d8060008114610d36576040519150601f19603f3d011682016040523d82523d6000602084013e610d3b565b606091505b50600081511415610d81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890611343565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050610dde565b600190505b949350505050565b600080823b905060008111915050919050565b6000610e0c610e07846114e3565b6114be565b905082815260208101848484011115610e2857610e27611715565b5b610e3384828561163f565b509392505050565b600081359050610e4a81611a74565b92915050565b600081359050610e5f81611a8b565b92915050565b600081519050610e7481611aa2565b92915050565b600082601f830112610e8f57610e8e611710565b5b8135610e9f848260208601610df9565b91505092915050565b600081359050610eb781611ab9565b92915050565b600060208284031215610ed357610ed261171f565b5b6000610ee184828501610e3b565b91505092915050565b60008060408385031215610f0157610f0061171f565b5b6000610f0f85828601610e3b565b9250506020610f2085828601610e3b565b9150509250929050565b600080600060608486031215610f4357610f4261171f565b5b6000610f5186828701610e3b565b9350506020610f6286828701610e3b565b9250506040610f7386828701610ea8565b9150509250925092565b60008060008060808587031215610f9757610f9661171f565b5b6000610fa587828801610e3b565b9450506020610fb687828801610e3b565b9350506040610fc787828801610ea8565b925050606085013567ffffffffffffffff811115610fe857610fe761171a565b5b610ff487828801610e7a565b91505092959194509250565b600080604083850312156110175761101661171f565b5b600061102585828601610e3b565b925050602061103685828601610e50565b9150509250929050565b600080604083850312156110575761105661171f565b5b600061106585828601610e3b565b925050602061107685828601610ea8565b9150509250929050565b6000602082840312156110965761109561171f565b5b60006110a484828501610e65565b91505092915050565b6000602082840312156110c3576110c261171f565b5b60006110d184828501610ea8565b91505092915050565b6110e3816115cb565b82525050565b6110f2816115dd565b82525050565b600061110382611514565b61110d818561151f565b935061111d81856020860161164e565b61112681611724565b840191505092915050565b600061113e603283611530565b915061114982611735565b604082019050919050565b6000611161602483611530565b915061116c82611784565b604082019050919050565b6000611184601983611530565b915061118f826117d3565b602082019050919050565b60006111a7602c83611530565b91506111b2826117fc565b604082019050919050565b60006111ca603883611530565b91506111d58261184b565b604082019050919050565b60006111ed602a83611530565b91506111f88261189a565b604082019050919050565b6000611210602983611530565b915061121b826118e9565b604082019050919050565b6000611233602c83611530565b915061123e82611938565b604082019050919050565b6000611256602983611530565b915061126182611987565b604082019050919050565b6000611279602183611530565b9150611284826119d6565b604082019050919050565b600061129c603183611530565b91506112a782611a25565b604082019050919050565b6112bb81611635565b82525050565b60006020820190506112d660008301846110da565b92915050565b60006080820190506112f160008301876110da565b6112fe60208301866110da565b61130b60408301856112b2565b818103606083015261131d81846110f8565b905095945050505050565b600060208201905061133d60008301846110e9565b92915050565b6000602082019050818103600083015261135c81611131565b9050919050565b6000602082019050818103600083015261137c81611154565b9050919050565b6000602082019050818103600083015261139c81611177565b9050919050565b600060208201905081810360008301526113bc8161119a565b9050919050565b600060208201905081810360008301526113dc816111bd565b9050919050565b600060208201905081810360008301526113fc816111e0565b9050919050565b6000602082019050818103600083015261141c81611203565b9050919050565b6000602082019050818103600083015261143c81611226565b9050919050565b6000602082019050818103600083015261145c81611249565b9050919050565b6000602082019050818103600083015261147c8161126c565b9050919050565b6000602082019050818103600083015261149c8161128f565b9050919050565b60006020820190506114b860008301846112b2565b92915050565b60006114c86114d9565b90506114d48282611681565b919050565b6000604051905090565b600067ffffffffffffffff8211156114fe576114fd6116e1565b5b61150782611724565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061154c82611635565b915061155783611635565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561158c5761158b6116b2565b5b828201905092915050565b60006115a282611635565b91506115ad83611635565b9250828210156115c0576115bf6116b2565b5b828203905092915050565b60006115d682611615565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561166c578082015181840152602081019050611651565b8381111561167b576000848401525b50505050565b61168a82611724565b810181811067ffffffffffffffff821117156116a9576116a86116e1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b611a7d816115cb565b8114611a8857600080fd5b50565b611a94816115dd565b8114611a9f57600080fd5b50565b611aab816115e9565b8114611ab657600080fd5b50565b611ac281611635565b8114611acd57600080fd5b5056fea2646970667358221220dd40b84ec228f0a7e1a55de64da3ae002bc8e62d43bdd6c5c9cc7b5ccd7e343664736f6c63430008070033";

export class ERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
