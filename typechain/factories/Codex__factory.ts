/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Codex, CodexInterface } from "../Codex";

const _abi = [
  {
    inputs: [],
    name: "class",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d10",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d100",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d6",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
    ],
    name: "d8",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_summoner",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "dn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107df806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063438303bf11610066578063438303bf146101815780636d0772d7146101b1578063952bbefe146101e1578063bff852fa14610211578063e668f6b61461022f5761009e565b80631386fa88146100a357806321183e8d146100d35780632986c0e5146101035780632ee41bdd146101215780633f9fdf3c14610151575b600080fd5b6100bd60048036038101906100b89190610407565b61025f565b6040516100ca91906105b9565b60405180910390f35b6100ed60048036038101906100e89190610407565b610273565b6040516100fa91906105b9565b60405180910390f35b61010b610287565b6040516101189190610597565b60405180910390f35b61013b60048036038101906101369190610407565b6102c0565b60405161014891906105b9565b60405180910390f35b61016b60048036038101906101669190610434565b6102d4565b60405161017891906105b9565b60405180910390f35b61019b60048036038101906101969190610407565b6102f2565b6040516101a891906105b9565b60405180910390f35b6101cb60048036038101906101c69190610407565b610306565b6040516101d891906105b9565b60405180910390f35b6101fb60048036038101906101f69190610407565b61031a565b60405161020891906105b9565b60405180910390f35b61021961032e565b6040516102269190610597565b60405180910390f35b61024960048036038101906102449190610407565b610367565b60405161025691906105b9565b60405180910390f35b600061026c8260086102d4565b9050919050565b60006102808260046102d4565b9050919050565b6040518060400160405280600481526020017f426173650000000000000000000000000000000000000000000000000000000081525081565b60006102cd82600c6102d4565b9050919050565b6000816102e08461037b565b6102ea91906106e0565b905092915050565b60006102ff8260146102d4565b9050919050565b60006103138260646102d4565b9050919050565b600061032782600a6102d4565b9050919050565b6040518060400160405280600681526020017f52616e646f6d000000000000000000000000000000000000000000000000000081525081565b60006103748260066102d4565b9050919050565b60006103b84260014361038e91906105fb565b4084336040516020016103a49493929190610549565b6040516020818303038152906040526103bf565b9050919050565b6000816040516020016103d29190610532565b6040516020818303038152906040528051906020012060001c9050919050565b60008135905061040181610792565b92915050565b60006020828403121561041d5761041c61076f565b5b600061042b848285016103f2565b91505092915050565b6000806040838503121561044b5761044a61076f565b5b6000610459858286016103f2565b925050602061046a858286016103f2565b9150509250929050565b6104856104808261062f565b6106a8565b82525050565b61049c61049782610641565b6106ba565b82525050565b60006104ad826105d4565b6104b781856105df565b93506104c7818560208601610675565b6104d081610774565b840191505092915050565b60006104e6826105d4565b6104f081856105f0565b9350610500818560208601610675565b80840191505092915050565b6105158161066b565b82525050565b61052c6105278261066b565b6106d6565b82525050565b600061053e82846104db565b915081905092915050565b6000610555828761051b565b602082019150610565828661048b565b602082019150610575828561051b565b6020820191506105858284610474565b60148201915081905095945050505050565b600060208201905081810360008301526105b181846104a2565b905092915050565b60006020820190506105ce600083018461050c565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006106068261066b565b91506106118361066b565b92508282101561062457610623610711565b5b828203905092915050565b600061063a8261064b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610693578082015181840152602081019050610678565b838111156106a2576000848401525b50505050565b60006106b3826106c4565b9050919050565b6000819050919050565b60006106cf82610785565b9050919050565b6000819050919050565b60006106eb8261066b565b91506106f68361066b565b92508261070657610705610740565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b61079b8161066b565b81146107a657600080fd5b5056fea2646970667358221220b113a9355d4623c8ca970d1e850cee479ed09ba2aac23986b6ffb0336948b4c864736f6c63430008070033";

export class Codex__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Codex> {
    return super.deploy(overrides || {}) as Promise<Codex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Codex {
    return super.attach(address) as Codex;
  }
  connect(signer: Signer): Codex__factory {
    return super.connect(signer) as Codex__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodexInterface {
    return new utils.Interface(_abi) as CodexInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Codex {
    return new Contract(address, _abi, signerOrProvider) as Codex;
  }
}
