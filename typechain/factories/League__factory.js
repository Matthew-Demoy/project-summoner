"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.League__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "rarityAddress",
                type: "address"
            },
            {
                internalType: "address",
                name: "rarityAttrAddress",
                type: "address"
            },
            {
                internalType: "address",
                name: "codexBaseRandomAddress",
                type: "address"
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "sender",
                type: "address"
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "gameId",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "teamOne",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "teamTwo",
                type: "uint256[]"
            },
        ],
        name: "createGameEvent",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256[8]",
                name: "initiatives",
                type: "uint256[8]"
            },
        ],
        name: "rollInitiativeEvent",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "teamOne",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "teamTwo",
                type: "uint256[]"
            },
            {
                internalType: "uint8",
                name: "mapId",
                type: "uint8"
            },
        ],
        name: "_createGame",
        outputs: [
            {
                internalType: "bytes32",
                name: "gameId",
                type: "bytes32"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "_random",
        outputs: [
            {
                internalType: "contract codex_base_random",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "teamOne",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "teamTwo",
                type: "uint256[]"
            },
            {
                internalType: "bytes32",
                name: "gameId",
                type: "bytes32"
            },
        ],
        name: "_startGame",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        name: "cooldowns",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "teamOne",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "teamTwo",
                type: "uint256[]"
            },
            {
                internalType: "uint8",
                name: "mapId",
                type: "uint8"
            },
        ],
        name: "createGame",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            },
        ],
        name: "matches",
        outputs: [
            {
                internalType: "uint8",
                name: "mapId",
                type: "uint8"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "rm",
        outputs: [
            {
                internalType: "contract rarity",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "rmAttributes",
        outputs: [
            {
                internalType: "contract rarityAttributes",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "summonerId",
                type: "uint256"
            },
        ],
        name: "setStartingPosition",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "summonerId",
                type: "uint256"
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "x",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "y",
                        type: "uint256"
                    },
                ],
                internalType: "struct League.position[]",
                name: "preMoves",
                type: "tuple[]"
            },
            {
                internalType: "uint256",
                name: "action",
                type: "uint256"
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "x",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "y",
                        type: "uint256"
                    },
                ],
                internalType: "struct League.position[]",
                name: "postMoves",
                type: "tuple[]"
            },
        ],
        name: "takeAction",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var _bytecode = "";
var League__factory = /** @class */ (function (_super) {
    __extends(League__factory, _super);
    function League__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    League__factory.prototype.deploy = function (rarityAddress, rarityAttrAddress, codexBaseRandomAddress, overrides) {
        return _super.prototype.deploy.call(this, rarityAddress, rarityAttrAddress, codexBaseRandomAddress, overrides || {});
    };
    League__factory.prototype.getDeployTransaction = function (rarityAddress, rarityAttrAddress, codexBaseRandomAddress, overrides) {
        return _super.prototype.getDeployTransaction.call(this, rarityAddress, rarityAttrAddress, codexBaseRandomAddress, overrides || {});
    };
    League__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    League__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    League__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    League__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    League__factory.bytecode = _bytecode;
    League__factory.abi = _abi;
    return League__factory;
}(ethers_1.ContractFactory));
exports.League__factory = League__factory;
